{"ast":null,"code":"var _jsxFileName = \"/Users/TGAP/Desktop/Stuff/RoboFriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport { setSearchField, requestRobots } from '../actions';\n\nconst mapStateToProps = state => ({\n  searchField: state.searchRobots.searchField,\n  robots: state.requestRobots.robots,\n  isPending: state.requestRobots.isPending,\n  error: state.requestRobots.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSearchChange: event => dispatch(setSearchField(event.target.value)),\n  onRequestRobots: () => requestRobots(dispatch)\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => {\n      this.setState({\n        robots: users\n      });\n    });\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h1\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Loading...\") : React.createElement(\"div\", {\n      classname: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"tc f1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/TGAP/Desktop/Stuff/RoboFriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,cAAR,EAAwBC,aAAxB,QAA4C,YAA5C;;AAEA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WADF;AAE9BE,EAAAA,MAAM,EAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFE;AAG9BC,EAAAA,SAAS,EAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAHD;AAI9BC,EAAAA,KAAK,EAAEL,KAAK,CAACF,aAAN,CAAoBO;AAJG,CAAL,CAA7B;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,cAAc,EAAEC,KAAK,IAAIF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADG;AAEpCC,EAAAA,eAAe,EAAE,MAAMd,aAAa,CAACS,QAAD;AAFA,CAAL,CAAnC;;AAKA,MAAMM,GAAN,SAAkBrB,SAAlB,CAA4B;AACxBsB,EAAAA,WAAW,GAAG;AACV;AACA,SAAKd,KAAL,GAAa;AACTG,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAEDY,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAI;AAAC,WAAKC,QAAL,CAAc;AAAClB,QAAAA,MAAM,EAAEiB;AAAT,OAAd;AAA+B,KAFnD;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACnB,MAAAA;AAAD,QAAW,KAAKH,KAAtB;AACA,UAAK;AAACC,MAAAA,WAAD;AAAcO,MAAAA;AAAd,QAAgC,KAAKe,KAA1C;AACA,UAAMC,cAAc,GAAGrB,MAAM,CAACsB,MAAP,CAAcC,KAAK,IAAI;AAC1C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC5B,WAAW,CAAC2B,WAAZ,EAAlC,CAAP;AACH,KAFsB,CAAvB;AAGA,WAAO,CAACzB,MAAM,CAAC2B,MAAR,GACH;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADG,GAEH;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEtB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEgB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CAFJ;AASH;;AA7BuB;;AAgC5B,eAAe/B,OAAO,CAACM,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport {setSearchField, requestRobots} from '../actions';\n\nconst mapStateToProps = state => ({\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => requestRobots(dispatch)\n})\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: []\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {this.setState({robots: users})})\n    }\n\n    render() {\n        const {robots} = this.state;\n        const{searchField, onSearchChange} = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n        return !robots.length ?\n            <h1 className='tc'>Loading...</h1> :\n            <div classname='tc'>\n                <h1 className='tc f1'>RoboFriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <CardList robots={filteredRobots}/>\n                </Scroll>\n            </div>     \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}