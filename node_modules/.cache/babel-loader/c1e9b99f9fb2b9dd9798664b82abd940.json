{"ast":null,"code":"import _classCallCheck from\"/Users/TGAP/Desktop/Stuff/RoboFriends/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/TGAP/Desktop/Stuff/RoboFriends/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/TGAP/Desktop/Stuff/RoboFriends/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/TGAP/Desktop/Stuff/RoboFriends/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/TGAP/Desktop/Stuff/RoboFriends/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from'react-redux';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import'./App.css';import Scroll from'../components/Scroll';import{setSearchField,requestRobots}from'../actions';var mapStateToProps=function mapStateToProps(state){return{searchField:state.searchRobots.searchField,robots:state.requestRobots.robots,isPending:state.requestRobots.isPending,error:state.requestRobots.error};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{onSearchChange:function onSearchChange(event){return dispatch(setSearchField(event.target.value));},onRequestRobots:function onRequestRobots(){return requestRobots(dispatch);}};};var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);function App(){_classCallCheck(this,App);return _possibleConstructorReturn(this,_getPrototypeOf(App).apply(this,arguments));}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.onRequestRobots();}},{key:\"render\",value:function render(){var _this$props=this.props,searchField=_this$props.searchField,onSearchChange=_this$props.onSearchChange,robots=_this$props.robots,isPending=_this$props.isPending;var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchField.toLowerCase());});return isPending?React.createElement(\"h1\",{className:\"tc\"},\"Loading...\"):React.createElement(\"div\",{className:\"tc\"},React.createElement(\"h1\",{className:\"tc f1\"},\"RoboFriends\"),React.createElement(SearchBox,{searchChange:onSearchChange}),React.createElement(Scroll,null,React.createElement(CardList,{robots:filteredRobots})));}}]);return App;}(Component);export default connect(mapStateToProps,mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/TGAP/Desktop/Stuff/RoboFriends/src/containers/App.js"],"names":["React","Component","connect","CardList","SearchBox","Scroll","setSearchField","requestRobots","mapStateToProps","state","searchField","searchRobots","robots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","App","props","filteredRobots","filter","robot","name","toLowerCase","includes"],"mappings":"smBAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAA+B,OAA/B,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAAQC,cAAR,CAAwBC,aAAxB,KAA4C,YAA5C,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAC9BC,WAAW,CAAED,KAAK,CAACE,YAAN,CAAmBD,WADF,CAE9BE,MAAM,CAAEH,KAAK,CAACF,aAAN,CAAoBK,MAFE,CAG9BC,SAAS,CAAEJ,KAAK,CAACF,aAAN,CAAoBM,SAHD,CAI9BC,KAAK,CAAEL,KAAK,CAACF,aAAN,CAAoBO,KAJG,CAAL,EAA7B,CAOA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACpCC,cAAc,CAAE,wBAAAC,KAAK,QAAIF,CAAAA,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CAAZ,EADe,CAEpCC,eAAe,CAAE,iCAAMd,CAAAA,aAAa,CAACS,QAAD,CAAnB,EAFmB,CAAL,EAAnC,C,GAKMM,CAAAA,G,uQAEkB,CAChB,KAAKC,KAAL,CAAWF,eAAX,GACH,C,uCAEQ,iBACmD,KAAKE,KADxD,CACCb,WADD,aACCA,WADD,CACcO,cADd,aACcA,cADd,CAC8BL,MAD9B,aAC8BA,MAD9B,CACsCC,SADtC,aACsCA,SADtC,CAEL,GAAMW,CAAAA,cAAc,CAAGZ,MAAM,CAACa,MAAP,CAAc,SAAAC,KAAK,CAAI,CAC1C,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP,CACH,CAFsB,CAAvB,CAGA,MAAOf,CAAAA,SAAS,CACZ,0BAAI,SAAS,CAAC,IAAd,eADY,CAEZ,2BAAK,SAAS,CAAC,IAAf,EACI,0BAAI,SAAS,CAAC,OAAd,gBADJ,CAEI,oBAAC,SAAD,EAAW,YAAY,CAAEI,cAAzB,EAFJ,CAGI,oBAAC,MAAD,MACI,oBAAC,QAAD,EAAU,MAAM,CAAEO,cAAlB,EADJ,CAHJ,CAFJ,CASH,C,iBApBavB,S,EAuBlB,cAAeC,CAAAA,OAAO,CAACM,eAAD,CAAkBO,kBAAlB,CAAP,CAA6CO,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport {setSearchField, requestRobots} from '../actions';\n\nconst mapStateToProps = state => ({\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => requestRobots(dispatch)\n})\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.onRequestRobots();\n    }\n\n    render() {\n        const{searchField, onSearchChange, robots, isPending} = this.props;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n        return isPending ?\n            <h1 className='tc'>Loading...</h1> :\n            <div className='tc'>\n                <h1 className='tc f1'>RoboFriends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <CardList robots={filteredRobots}/>\n                </Scroll>\n            </div>     \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}