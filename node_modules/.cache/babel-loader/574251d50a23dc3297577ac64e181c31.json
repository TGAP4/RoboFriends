{"ast":null,"code":"import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants\";\nconst initialStateSearch = {\n  searchField: ''\n};\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: ''\n};\nexport const searchRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, {\n        searchField: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const requestRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/TGAP/Desktop/Stuff/RoboFriends/src/reducers.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","initialStateSearch","searchField","initialStateRobots","isPending","robots","error","searchRobots","state","initialState","action","type","Object","assign","payload","requestRobots"],"mappings":"AAAA,SACIA,mBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,EAIIC,qBAJJ,QAKO,aALP;AAOA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAE;AADU,CAA3B;AAIA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,SAAS,EAAE,KADY;AAEvBC,EAAAA,MAAM,EAAE,EAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAA3B;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAACC,YAAP,EAAqBC,MAAM,GAAC,EAA5B,KAAmC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,mBAAL;AACI,aAAOe,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACN,QAAAA,WAAW,EAAEQ,MAAM,CAACI;AAArB,OAAzB,CAAP;;AACJ;AACI,aAAON,KAAP;AAJR;AAMH,CAPM;AASP,OAAO,MAAMO,aAAa,GAAG,CAACP,KAAK,GAACC,YAAP,EAAqBC,MAAM,GAAC,EAA5B,KAAmC;AAC5D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,sBAAL;AACI,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACJ,QAAAA,SAAS,EAAE;AAAZ,OAAzB,CAAP;;AACJ,SAAKL,sBAAL;AACI,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACH,QAAAA,MAAM,EAAEK,MAAM,CAACI,OAAhB;AAAyBV,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ,SAAKJ,qBAAL;AACI,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAACF,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAAf;AAAwBV,QAAAA,SAAS,EAAE;AAAnC,OAAzB,CAAP;;AACJ;AACI,aAAOI,KAAP;AARR;AAUH,CAXM","sourcesContent":["import { \n    CHANGE_SEARCH_FIELD,\n    REQUEST_ROBOTS_PENDING,\n    REQUEST_ROBOTS_SUCCESS,\n    REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nconst initialStateRobots = {\n    isPending: false,\n    robots: [],\n    error: ''\n}\n\nexport const searchRobots = (state=initialState, action={}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n}\n\nexport const requestRobots = (state=initialState, action={}) => {\n    switch(action.type) {\n        case REQUEST_ROBOTS_PENDING:\n            return Object.assign({}, state, {isPending: true});\n        case REQUEST_ROBOTS_SUCCESS:\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\n        case REQUEST_ROBOTS_FAILED:\n            return Object.assign({}, state, {error: action.payload, isPending: false});\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}